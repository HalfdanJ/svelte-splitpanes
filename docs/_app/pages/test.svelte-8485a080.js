import{S as be,i as ye,s as ze,$ as xe,a1 as je,P as ke,e as u,t as g,k as h,w as N,c as _,a as $,h as w,d as o,m as d,x as O,g as v,J as l,y as Q,a2 as Ee,q as A,o as q,B as U,l as ve,O as ge,Q as Le}from"../chunks/vendor-189ee4c6.js";import{S as Te,T as Ie,P as Se}from"../chunks/TextAreaAutosize-b2a1995e.js";function Pe(m,a,f){const n=m.slice();return n[4]=a[f],n[6]=f,n}function He(m){let a,f=m[6]+1+"",n,i;return{c(){a=u("span"),n=g(f),i=h()},l(t){a=_(t,"SPAN",{});var r=$(a);n=w(r,f),r.forEach(o),i=d(t)},m(t,r){v(t,a,r),l(a,n),v(t,i,r)},p:ge,d(t){t&&o(a),t&&o(i)}}}function Ae(m){let a,f;return a=new Se({props:{minSize:"10",$$slots:{default:[He]},$$scope:{ctx:m}}}),{c(){N(a.$$.fragment)},l(n){O(a.$$.fragment,n)},m(n,i){Q(a,n,i),f=!0},p(n,i){const t={};i&128&&(t.$$scope={dirty:i,ctx:n}),a.$set(t)},i(n){f||(A(a.$$.fragment,n),f=!0)},o(n){q(a.$$.fragment,n),f=!1},d(n){U(a,n)}}}function qe(m){let a,f,n={length:3},i=[];for(let t=0;t<n.length;t+=1)i[t]=Ae(Pe(m,n,t));return{c(){for(let t=0;t<i.length;t+=1)i[t].c();a=ve()},l(t){for(let r=0;r<i.length;r+=1)i[r].l(t);a=ve()},m(t,r){for(let s=0;s<i.length;s+=1)i[s].m(t,r);v(t,a,r),f=!0},p:ge,i(t){if(!f){for(let r=0;r<n.length;r+=1)A(i[r]);f=!0}},o(t){i=i.filter(Boolean);for(let r=0;r<i.length;r+=1)q(i[r]);f=!1},d(t){Le(i,t),t&&o(a)}}}function Be(m){let a,f,n,i,t,r,s,j,D,F,k,G,K,E,V,W,L,X,Y,T,Z,ee,I,te,ne,S,ae,ie,P,se,B,b,R,x,re,C,y,le,J,z,M;b=new Te({props:{class:"default-theme",style:"height: 400px",$$slots:{default:[qe]},$$scope:{ctx:m}}}),b.$on("message",m[1]);function we(e){m[3](e)}let oe={minRows:4,maxRows:40};return m[0]!==void 0&&(oe.value=m[0]),y=new Ie({props:oe}),xe.push(()=>je(y,"value",we)),z=new ke({props:{code:m[2]}}),{c(){a=u("h2"),f=g("Listening to emitted events"),n=h(),i=u("p"),t=g("Here is the list of events that are emitted from splitpanes:"),r=h(),s=u("ul"),j=u("li"),D=g("ready has no parameter and fires when splitpanes is ready"),F=h(),k=u("li"),G=g(`resize fires while resizing (on mousemove/touchmove) and returns an array of all the panes objects with their
		dimensions`),K=h(),E=u("li"),V=g(`resized fires once when the resizing stops after user drag (on mouseup/touchend). it returns an array of all the
		panes objects with their dimensions. The event also fires after adding or removing a pane.`),W=h(),L=u("li"),X=g("pane-click returns the clicked pane object with its dimensions."),Y=h(),T=u("li"),Z=g("pane-maximize returns the maximized pane object with its dimensions."),ee=h(),I=u("li"),te=g("pane-add returns an object containing the index of the added pane and the new array of panes after resize."),ne=h(),S=u("li"),ae=g(`pane-remove returns an object containing the removed pane and an array of all the remaining panes objects with their
		dimensions after resize.`),ie=h(),P=u("li"),se=g(`splitter-click returns the next pane object (with its dimensions) directly after the clicked splitter. This event is
		only emitted if dragging did not occur between mousedown and mouseup.`),B=h(),N(b.$$.fragment),R=h(),x=u("p"),re=g("Try resizing panes and check the logs bellow."),C=h(),N(y.$$.fragment),J=h(),N(z.$$.fragment)},l(e){a=_(e,"H2",{});var p=$(a);f=w(p,"Listening to emitted events"),p.forEach(o),n=d(e),i=_(e,"P",{});var H=$(i);t=w(H,"Here is the list of events that are emitted from splitpanes:"),H.forEach(o),r=d(e),s=_(e,"UL",{});var c=$(s);j=_(c,"LI",{});var fe=$(j);D=w(fe,"ready has no parameter and fires when splitpanes is ready"),fe.forEach(o),F=d(c),k=_(c,"LI",{});var pe=$(k);G=w(pe,`resize fires while resizing (on mousemove/touchmove) and returns an array of all the panes objects with their
		dimensions`),pe.forEach(o),K=d(c),E=_(c,"LI",{});var ce=$(E);V=w(ce,`resized fires once when the resizing stops after user drag (on mouseup/touchend). it returns an array of all the
		panes objects with their dimensions. The event also fires after adding or removing a pane.`),ce.forEach(o),W=d(c),L=_(c,"LI",{});var me=$(L);X=w(me,"pane-click returns the clicked pane object with its dimensions."),me.forEach(o),Y=d(c),T=_(c,"LI",{});var he=$(T);Z=w(he,"pane-maximize returns the maximized pane object with its dimensions."),he.forEach(o),ee=d(c),I=_(c,"LI",{});var de=$(I);te=w(de,"pane-add returns an object containing the index of the added pane and the new array of panes after resize."),de.forEach(o),ne=d(c),S=_(c,"LI",{});var ue=$(S);ae=w(ue,`pane-remove returns an object containing the removed pane and an array of all the remaining panes objects with their
		dimensions after resize.`),ue.forEach(o),ie=d(c),P=_(c,"LI",{});var _e=$(P);se=w(_e,`splitter-click returns the next pane object (with its dimensions) directly after the clicked splitter. This event is
		only emitted if dragging did not occur between mousedown and mouseup.`),_e.forEach(o),c.forEach(o),B=d(e),O(b.$$.fragment,e),R=d(e),x=_(e,"P",{});var $e=$(x);re=w($e,"Try resizing panes and check the logs bellow."),$e.forEach(o),C=d(e),O(y.$$.fragment,e),J=d(e),O(z.$$.fragment,e)},m(e,p){v(e,a,p),l(a,f),v(e,n,p),v(e,i,p),l(i,t),v(e,r,p),v(e,s,p),l(s,j),l(j,D),l(s,F),l(s,k),l(k,G),l(s,K),l(s,E),l(E,V),l(s,W),l(s,L),l(L,X),l(s,Y),l(s,T),l(T,Z),l(s,ee),l(s,I),l(I,te),l(s,ne),l(s,S),l(S,ae),l(s,ie),l(s,P),l(P,se),v(e,B,p),Q(b,e,p),v(e,R,p),v(e,x,p),l(x,re),v(e,C,p),Q(y,e,p),v(e,J,p),Q(z,e,p),M=!0},p(e,[p]){const H={};p&128&&(H.$$scope={dirty:p,ctx:e}),b.$set(H);const c={};!le&&p&1&&(le=!0,c.value=e[0],Ee(()=>le=!1)),y.$set(c)},i(e){M||(A(b.$$.fragment,e),A(y.$$.fragment,e),A(z.$$.fragment,e),M=!0)},o(e){q(b.$$.fragment,e),q(y.$$.fragment,e),q(z.$$.fragment,e),M=!1},d(e){e&&o(a),e&&o(n),e&&o(i),e&&o(r),e&&o(s),e&&o(B),U(b,e),e&&o(R),e&&o(x),e&&o(C),U(y,e),e&&o(J),U(z,e)}}}function Re(m,a,f){let n="// Event name: Event params   (Last event at bottom top)";function i(s){console.log(s),f(0,n+=`
`+s.type),console.log(n)}let t=`
code here`;function r(s){n=s,f(0,n)}return[n,i,t,r]}class Me extends be{constructor(a){super();ye(this,a,Re,Be,ze,{})}}export{Me as default};
